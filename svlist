#!/bin/bash

LIST=($(systemctl list-units --plain --all | sed -e '/(UNIT\|LOAD\|ACTIVE\|SUB\|not-found\|loaded units\|^$\|list-unit-files\|@.*\|.device\|.swap\|misc.\|)/d' | awk '{print $1"\\t"$2"\\t"$3}'))

ACTIVE=()
INACTIVE=()
MASKED=()

fillup()
{
for i in ${LIST[@]}
do
	COL1=($(echo -e $i | awk '{print $1}'))
	COL2=($(echo -e $i | awk '{print $2}'))
	COL3=($(echo -e $i | awk '{print $3}'))

	if [[ $COL2 = "loaded" && $COL3 = "active" ]]
	then
		ACTIVE+=($COL1)
	elif [[ $COL2 = "loaded" && $COL3 = "inactive" ]]
	then
		INACTIVE+=($COL1)
	elif [[ $COL2 = "masked" ]]
	then
		MASKED+=($COL1)
	fi
done
}

function show_active()
{
	echo -e "\n\e[0;1;4mList of currently \e[92;1;4mactive\e[0;1;4m services\e[0m\n"

	for value in "${ACTIVE[@]}"; do 
	    printf "\e[92m%-80s\e[0m\n" "${value}"
	done | sort | column -x
}

function show_inactive()
{
	echo -e "\n\e[0;1;4mList of currently \e[91;1;4minactive\e[0;1;4m services\e[0m\n"

	for value in "${INACTIVE[@]}"; do 
	    printf "\e[91m%-80s\e[0m\n" "${value}"
	done | sort | column -x
}

function show_masked()
{
	echo -e "\n\e[0;1;4mList of currently \e[95;1;4mmasked\e[0;1;4m services\e[0m\n"

	for value in "${MASKED[@]}"; do 
	    printf "\e[95m%-80s\e[0m\n" "${value}"
	done | sort | column -x
}

function print_help()
{
	echo -e "\e[96m[+]\e[0m Utilisation de la commande \e[94msvlist\e[0m:\n"
	echo -e "\e[96m[+] \e[93msvlist\e[0m [options]\n"
	echo -e "\e[96m[+] \e[94mOptions\e[0m:"
	echo -e "\e[96m[+] \e[92m-h\e[0m: Affiche ce message"
	echo -e "\e[96m[+] \e[92m-a\e[0m: Liste les services actuellement actif"
	echo -e "\e[96m[+] \e[92m-i\e[0m: Liste les services actuellement inactif"
	echo -e "\e[96m[+] \e[92m-m\e[0m: Liste les services actuellement masqu√©"
}

if [ $# -lt 1 ]
then
	print_help
else
	while getopts "aimh" OPTION; do
		case $OPTION in
		a)
			if [ -z $ACTIVE ]
			then
				fillup
			fi
			show_active
			;;
		i)
			if [ -z $INACTIVE ]
			then
				fillup
			fi
			show_inactive
			;;
		m)
			if [ -z $MASKED ]
			then
				fillup
			fi
			show_masked
			;;
		h)
			print_help
			exit 0
			;;
		esac
	done
fi
